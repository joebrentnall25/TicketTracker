{"version":3,"sources":["components/UserCard/UserCard.jsx","data/team.js","components/Grid/Grid.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["UserCard","props","useState","count","setCount","className","name","role","onClick","max","value","team","id","Grid","map","member","toString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAiCeA,EA9BE,SAACC,GACd,MAAwBC,mBAAS,GAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KAcA,OACI,sBAAKC,UAAU,OAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BJ,EAAMK,OAClC,oBAAID,UAAU,aAAd,SAA4BJ,EAAMM,OAClC,sBAAKF,UAAU,gBAAf,UACI,oBAAIA,UAAU,sBAAd,qBACA,mBAAGA,UAAU,oBAAb,SAAkCF,IAClC,wBAAQE,UAAU,uBAAuBG,QAAS,WAlB5C,IAAVL,GACAC,EAASD,EAAQ,IAiBb,eACA,wBAAQE,UAAU,sBAAsBG,QAAS,WAb3C,KAAVL,GACAC,EAASD,EAAQ,IAYb,eACA,0BAAUE,UAAU,iBAAiBI,IAAI,KAAKC,MAAOP,WCyBpDQ,EApDJ,CACT,CACEC,GAAI,EACJN,KAAM,eACNC,KAAM,6BAER,CACEK,GAAI,EACJN,KAAM,iBACNC,KAAM,6BAER,CACEK,GAAI,EACJN,KAAM,eACNC,KAAM,6BAER,CACEK,GAAI,EACJN,KAAM,gBACNC,KAAM,sBAER,CACEK,GAAI,EACJN,KAAM,gBACNC,KAAM,sBAER,CACEK,GAAI,EACJN,KAAM,aACNC,KAAM,6BAER,CACEK,GAAI,EACJN,KAAM,kBACNC,KAAM,mBAER,CACEK,GAAI,EACJN,KAAM,aACNC,KAAM,UAER,CACEK,GAAI,EACJN,KAAM,gBACNC,KAAM,UAER,CACEK,GAAI,GACJN,KAAM,mBACNC,KAAM,aCjCGM,EAXF,WACT,OACI,yBAASR,UAAU,OAAnB,SACKM,EAAKG,KAAI,SAACC,GAAD,OACN,cAAC,EAAD,CAAqCT,KAAMS,EAAOT,KAAMC,KAAMQ,EAAOR,MAAtDQ,EAAOH,GAAGI,kB,MCI1BC,MATf,WACE,OACE,sBAAKZ,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,QCISa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14c4b255.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport './UserCard.scss';\r\n\r\nconst UserCard = (props) => {\r\n    let [count, setCount] = useState(0);\r\n\r\n    const handleDecrement = () => {\r\n        if (count !== 0){\r\n            setCount(count - 1);\r\n        }\r\n    }\r\n\r\n    const handleIncrement = () => {\r\n        if (count !== 10){\r\n            setCount(count + 1);\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <h3 className=\"card__name\">{props.name}</h3>\r\n            <h4 className=\"card__role\">{props.role}</h4>\r\n            <div className=\"card__counter\">\r\n                <h5 className=\"card__counter-title\">Counter</h5>\r\n                <p className=\"card__counter-num\">{count}</p>\r\n                <button className=\"card__counter--minus\" onClick={() => handleDecrement()}>-</button>\r\n                <button className=\"card__counter--plus\" onClick={() => handleIncrement()}>+</button>\r\n                <progress className=\"card__progress\" max=\"10\" value={count}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;","const team = [\r\n    {\r\n      id: 1,\r\n      name: \"Alima Miller\",\r\n      role: \"Junior Software Developer\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Evelyn Rodgers\",\r\n      role: \"Junior Software Developer\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Henley Myers\",\r\n      role: \"Junior Software Developer\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Celyn Sanders\",\r\n      role: \"Software Developer\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Effie Mohamed\",\r\n      role: \"Software Developer\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Karam Lees\",\r\n      role: \"Senior Software Developer\"\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Eleanor Dowling\",\r\n      role: \"Project Manager\"\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Haris Grey\",\r\n      role: \"Tester\"\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Sohaib Farley\",\r\n      role: \"Tester\"\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Phillip Mitchell\",\r\n      role: \"Hard Man\"\r\n    },\r\n  ]\r\n  export default team;","import './Grid.scss';\r\nimport UserCard from '../UserCard/UserCard';\r\nimport team from \"../../data/team\";\r\n\r\n\r\nconst Grid = () => {\r\n    return (\r\n        <section className=\"grid\">\r\n            {team.map((member) =>\r\n                <UserCard key={member.id.toString()} name={member.name} role={member.role}/>)\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Grid;","import Grid from './components/Grid/Grid';\r\n\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Ticket Tracker</h1>    \r\n      <Grid />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}